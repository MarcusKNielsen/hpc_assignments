#!/bin/bash

#BSUB -J poisson_j_v1
# -- Output File --
#BSUB -o output_%J.out
#BSUB -q hpcintro
#BSUB -n 2
#BSUB -R "rusage[mem=10GB]"
#BSUB -W 15
#BSUB -R "select[model==XeonE5_2650v4]"
# uncomment the following line, if you want to assure that your job has
# a whole CPU for itself (shared L3 cache)
#BSUB -R "span[hosts=1] affinity[socket(1)]"

# Usage: ./script.sh <iterations> <tolerance>

ITERATIONS="30000"
TOLERANCE="0.01"
EXECUTABLE="poisson_j"

OUTPUT_FILE="${EXECUTABLE}_I${ITERATIONS}_T${TOLERANCE}.dat"

THREADS="1 2 4 8 16 24"
SIZES="40 80 100 150 200 300 400 500 600"

for T in $THREADS
do
  for S in $SIZES
  do
    OUTPUT=$( { time OMP_NUM_THREADS=$T ./$EXECUTABLE $S $ITERATIONS $TOLERANCE 0; } 2>&1 )

    METRICS=$(echo "$OUTPUT" | head -n 1)           # Extract the first line
    REAL_TIME=$(echo "$OUTPUT" | grep "real" | awk '{print $2}' | sed 's/,/./' | awk -F'm' '{printf "%.3f", $1 * 60 + $2}')
    USER_TIME=$(echo "$OUTPUT" | grep "user" | awk '{print $2}' | sed 's/,/./' | awk -F'm' '{printf "%.3f", $1 * 60 + $2}')
#   SYS_TIME=$(echo "$OUTPUT" | grep "sys" | awk '{print $2}' | sed 's/,/./' | awk -F'm' '{printf "%.3f", $1 * 60 + $2}')

    echo "$METRICS, $T, $REAL_TIME, $USER_TIME" >> $OUTPUT_FILE
  done
done
